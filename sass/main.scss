$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000

*,
*::after,
*::before {
    /* capture any before and after pseudo-elements in universal selector */
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
    /* 100% is a based on default 16px.  We prefer 10px */
    /* so calculate the percentage 100/16 = 0.625 => 62.5% */
    /* We can now use a function that will let a user change  */
    /* the font-size to suit their needs. eg they may select size 20 */
    /* and we give them .625*20 = 12.5px */
    /* Note that rem doesn't work on sites written for IE9 or older. */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    /* enable inheritance of box-sizing for later customization */
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    /* clip-path: polygon(x y, x y, x y, x y; */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    &____logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }

    &__text-box {
        /* first align the text-box relative to the parent-body element... */
        position: absolute;
        top: 40%;
        left: 50%;
        /* ...then move the element itself again relative to the fixed top, left x y position */
        transform: translate(-50%, -50%);
        /* centre the button which is text */
        text-align: center;
    }
}




.heading-primary {
    color: $color-white;
    text-transform: uppercase;

    backface-visibility: hidden;
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.74rem;
    
        animation: moveInRight 1s ease-out;
    }
}


@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-1rem);
    }

    80% {
        transform: translate(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(1rem);
    }

    80% {
        transform: translate(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 5rem;
        transition: all .2s;
        /* define button position for  btn-white::after */
        position: relative;

        &--animated {
            /* animation timing and delay */
            animation: moveInBottom .5s ease-out .75s;
            /* apply styles before the animation starts */
            animation-fill-mode: backwards;

        }

        &:hover {
            transform: translateY(-0.3rem);
            /* x y blur colour with % opacity give the
            look of the button up above base image */
            box-shadow: 0 1rem 2rem rgba($color-black .2);
            &::after {
                /* scale pseudo-button in the X & Y planes */
                transform: scaleX(1.4) scaleY(1.6);
                opacity: 0;
            }
        }

        &:active {
            transform: translateY(-0.1rem);
            /* reduce shadow size as well as the blur to give 
            appearance of button moving close to base image */
            box-shadow: 0 .5rem 1rem rgba($color-black .2);
        }

        &--white {
            background-color: $color-white;
            color: $color-grey-dark;

            &:after {
                background-color: $color-white;
            }
        }

        &::after {
            /* crate a pseudo button to go behind the button */
            content: "";
            display: inline-block;
            height: 100%;
            width: 100%;
            border-radius: 5rem;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            /* btn::after is the initial state for btn:hover::after */
            transition: all .4s;
        }        
    }
}
